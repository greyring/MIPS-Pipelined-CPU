.extern init_all
.extern load__
.global _start

.data
kernel_sp: .word 0x80008000####################
shell_path: .asciiz "A:/SHELL.ELF"

.text
.set noreorder
.org 0x0000#8000 0000 TLB Refill
_start:
.org 0x0100#8000 0100 Cache
.org 0x0180#8000 0180 EXC INT TLB(EXL)
#swap from user stack to kernel stack
#, push the user $sp into kernel stack
exc_start:
la $k0, kernel_sp
lw $k1, 0($k0)
move $k0, $sp
move $sp, $k1
addiu $sp, $sp, -124
sw $k0, 120($sp)
b save_all
nop
save_all_return:
move $a0, $sp  #sp
addiu $sp, $sp, -16
jal handle_exception
nop
addiu $sp, $sp, 16
b restore_all
nop


.org 0x0200#8000 0200 INT(IV)


save_all:
mfc0 $k0, $12 #status
sw $k0, 116($sp)
mfc0 $k0, $13 #cause
sw $k0, 112($sp)
mfc0 $k0, $14 #epc
sw $k0, 108($sp)
sw $v0, 104($sp)
sw $v1, 100($sp)
sw $a0, 96($sp)
sw $a1, 92($sp)
sw $a2, 88($sp)
sw $a3, 84($sp)
sw $t0, 80($sp)
sw $t1, 76($sp)
sw $t2, 72($sp)
sw $t3, 68($sp)
sw $t4, 64($sp)
sw $t5, 60($sp)
sw $t6, 56($sp)
sw $t7, 52($sp)
sw $s0, 48($sp)
sw $s1, 44($sp)
sw $s2, 40($sp)
sw $s3, 36($sp)
sw $s4, 32($sp)
sw $s5, 28($sp)
sw $s6, 24($sp)
sw $s7, 20($sp)
sw $t8, 16($sp)
sw $t9, 12($sp)
sw $gp, 8($sp)
sw $fp, 4($sp)
sw $ra, 0($sp)
b save_all_return
nop

restore_all:
lw $k0, 116($sp)
mtc0 $k0, $12 #status
lw $k0, 112($sp)
mtc0 $k0, $13 #cause
lw $k0, 108($sp)
mtc0 $k0, $14 #epc
lw $v0, 104($sp)
lw $v1, 100($sp)
lw $a0, 96($sp)
lw $a1, 92($sp)
lw $a2, 88($sp)
lw $a3, 84($sp)
lw $t0, 80($sp)
lw $t1, 76($sp)
lw $t2, 72($sp)
lw $t3, 68($sp)
lw $t4, 64($sp)
lw $t5, 60($sp)
lw $t6, 56($sp)
lw $t7, 52($sp)
lw $s0, 48($sp)
lw $s1, 44($sp)
lw $s2, 40($sp)
lw $s3, 36($sp)
lw $s4, 32($sp)
lw $s5, 28($sp)
lw $s6, 24($sp)
lw $s7, 20($sp)
lw $t8, 16($sp)
lw $t9, 12($sp)
lw $gp, 8($sp)
lw $fp, 4($sp)
lw $ra, 0($sp)
addi $sp, $sp, 124
la $k0, kernel_sp
sw $sp, 0($k0)
lw $sp, -4($sp)
eret

.org 0x400
init_start:
add $k0, $0, $0
mtc0 $k0, $10#entry Hi set ASID = 0 shell process
la $k0, kernel_sp
lw $sp, 0($k0)
addiu $sp, $sp, -16
jal init_all
nop
addiu $sp, $sp, 16

main_loop:
la $a0, shell_path
addiu $sp, $sp, -16
jal load__
nop
addiu $sp, $sp, 16
mtc0 $v0, $14#move to epc
la $k0, kernel_sp
sw $sp, 0($k0)
li $sp, 0x00004000
eret
j main_loop
nop
